name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build Linux release
        run: pyinstaller --onefile --add-data "resources:resources" main.py

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-release
          path: dist

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build Windows release
        run: pyinstaller --onefile --add-data "resources;resources" main.py

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-release
          path: dist

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Changes in this release:
            - release

      - name: Upload Linux release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/main
          asset_name: Coratia_Streaming_App_linux

      - name: Upload Windows release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/main.exe
          asset_name: Coratia_Streaming_App_windows
