name: Build and Release

on:
  release:
    types:
      - created

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install githubrelease

      - name: Build Linux release
        run: pyinstaller --onefile --add-data "resources:resources" main.py

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-release
          path: dist
      
      - name: Set up GitHub Release
        id: gh-release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/main  # Adjust the filename based on your PyInstaller settings for Linux
            dist/main.exe  # Adjust the filename based on your PyInstaller settings for Windows
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Changes in this release:
            - Describe your changes here
      - name: Upload Linux release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.gh-release.outputs.upload_url }}
          asset_path: dist/main
          asset_name: your_app_linux
          asset_content_type: application/octet-stream

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install githubrelease
          
      - name: Build Windows release
        run: pyinstaller --onefile --add-data "resources;resources" main.py

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-release
          path: dist
      - name: Set up GitHub Release
        id: gh-release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/main  # Adjust the filename based on your PyInstaller settings for Linux
            dist/main.exe  # Adjust the filename based on your PyInstaller settings for Windows
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Changes in this release:
            - Describe your changes here
      - name: Upload Linux release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.gh-release.outputs.upload_url }}
          asset_path: dist/main
          asset_name: your_app_linux
          asset_content_type: application/octet-stream  # Add content type based on your asset type

      - name: Upload Windows release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.gh-release.outputs.upload_url }}
          asset_path: dist/main.exe
          asset_name: your_app_windows
          asset_content_type: application/octet-stream
